--Создание БД 
use master

CREATE DATABASE Управление_заданиями
ON
(NAME = 'Управление заданиями',
FILENAME = 'E:\BD\Kursed\Kursuch.mdf',
SIZE = 1,
MAXSIZE = 10,
FILEGROWTH = 1)
LOG ON
(NAME = 'Kursuch _log',
FILENAME = 'E:\BD\Kursed\Kursuch_log.ldf',
SIZE = 1,
MAXSIZE = 5,
FILEGROWTH = 1)
Go

--Создание таблиц

use [Управление_заданиями]

Create table [Сотрудники](
[id Cотрудника] int not null identity (1, 1),
[ФИО сотрудника] varchar(30) not null check ([ФИО сотрудника] not LIKE '%[^А-Яа-я]%'+'%[^А-Яа-я]%'+'%[^А-Яа-я]%'),
[Занятость] varchar(30) check ([Занятость] IN ('Занят', 'Не занят')) default 'Не занят' not null,
CONSTRAINT [ПК_id_Сотрудника] PRIMARY KEY ([id Cотрудника]),
)
Go
CREATE TABLE [Очередь заданий](
[Код] int not null identity (1, 1),
[Название] varchar(30) UNIQUE check ([Название] not LIKE '%[^А-Яа-я]%'+'%[^А-Яа-я]%'+'%[^А-Яа-я]%') not null,
[Тип очереди] varchar(30) check ([Тип очереди] not LIKE '%[^А-Яа-я]%'+'%[^А-Яа-я]%'+'%[^А-Яа-я]%') not null,
[Тип заданий] varchar(40) UNIQUE not null,
CONSTRAINT [ПК_Код] PRIMARY KEY ([Код]),
)
Go
CREATE TABLE [Данные по поступающим заданиям](
[id Задания] int not null identity (1, 1),
[Код Очереди] int not null,
[Исполнитель] int not null,
[Тип] varchar(30),
[Приоритет] smallint check (Приоритет BETWEEN 1 and 256) not null,
[Заказчик] varchar(30) not null check ([Заказчик] not LIKE '%[^А-Яа-я]%'+'%[^А-Яа-я]%'+'%[^А-Яа-я]%'),
[Плановый срок обработки] date,
[Дата Дедлайна] date not null,
[Статус] varchar(20) check ([Статус] IN ('Законченное', 'Не законченное')) default 'Не законченное',
CONSTRAINT [ВК_Код_Очереди] FOREIGN KEY ([Код Очереди]) REFERENCES [Очередь заданий]([Код]),
CONSTRAINT [ВК_Исполнитель] FOREIGN KEY ([Исполнитель]) REFERENCES [Сотрудники]([id Cотрудника]),
CONSTRAINT [ПК_id_Задания] PRIMARY KEY ([id Задания]),
)
Go
CREATE TABLE [Шаги выполнения задания](
[id Задания] int not null,
[Номер действия] smallint not null,
[Действие] varchar(40),
CONSTRAINT [ВК_id_Задания] FOREIGN KEY ([id Задания]) REFERENCES [Данные по поступающим заданиям]([id Задания]),
CONSTRAINT [ПК_id_Задания_Номер_Действия] PRIMARY KEY ([id Задания],[Номер Действия]),
)
Go

--Заполнение таблиц

DBCC CHECKIDENT('Сотрудники', RESEED, 1) --сброс счетчика
Go
INSERT INTO Сотрудники VALUES
('Веселов Геннадий Николаевич', 'Занят'),
('Евсеев Вилен Вячеславович','Занят'),
('Игнатов Гарри Оскарович','Не занят'),
('Алексеев Ермолай Анатольевич','Занят'),
('Новиков Прохор Улебович','Не занят'),
('Лаврентьев Альфред Вадимович','Не занят'),
('Карпов Витольд Егорович','Занят'),
('Лукин Болеслав Матвеевич','Занят'),
('Родионов Андрей Геласьевич','Занят'),
('Крылов Даниил Денисович','Занят')
Go
DBCC CHECKIDENT('Очередь заданий', RESEED, 1) --сброс счетчика
Go
INSERT INTO [Очередь заданий] VALUES
('Ландшафтный дизайн','Обычная', 'Уборка; Посадка; Ландшафт;'),
('Застройка','Приоритетная', 'Постройка; Обустройство;'),
('Прием заказов','Средней важности', 'Заказы; Работа с заказчиками;'),
('Логистика','Приоритетная', 'Доставка оборудования; Вывоз мусора;')
Go
DBCC CHECKIDENT('Данные по поступающим заданиям', RESEED, 1) --сброс счетчика
Go
INSERT INTO [Данные по поступающим заданиям] VALUES
(1, 1, 'Уборка', 1,'Фомин Виссарион Ростиславович','2020-06-15','2020-06-15','Законченное'),
(1, 1, 'Уборка', 10,'Ковалёв Гавриил Аркадьевич','2020-08-01','2020-08-03','Не законченное'),
(1, 2, 'Уборка', 9,'Ермаков Эрнест Максимович','2020-07-18','2020-07-20','Не законченное'),
(1, 2, 'Уборка', 6,'Ковалёв Илья Анатольевич','2020-07-11','2020-07-21','Не законченное'),
(1, 4, 'Посадка', 8,'Маслов Юстин Евсеевич','2020-07-12','2020-07-16','Не законченное'),
(1, 4, 'Посадка', 7,'Самойлов Платон Романович','2020-07-01','2020-07-24','Законченное'),
(1, 7, 'Посадка', 5,'Фёдоров Сергей Игоревич','2020-06-05','2020-07-01','Не законченное'),
(2, 8, 'Обустройство', 3,'Фомин Виссарион Ростиславович','2020-06-03','2020-06-27','Законченное'),
(2, 9, 'Обустройство', 4,'Зимин Иван Петрович','2020-06-05','2020-07-15','Законченное'),
(2, 10, 'Постройка', 2,'Фёдоров Иосиф Павлович','2020-03-19','2020-06-21','Законченное'),
(3, 1, 'Работа с заказчиками', 1,'Фомин Виссарион Ростиславович','2020-06-15','2020-07-15','Законченное'),
(3, 4, 'Работа с заказчиками', 5,'Маслов Юстин Евсеевич',NULL,'2020-07-26','Законченное'),
(3, 8, 'Работа с заказчиками', 3,'Фомин Виссарион Ростиславович','2020-06-03','2020-07-01','Законченное'),
(3, 9, 'Работа с заказчиками', 4,'Зимин Иван Петрович','2020-07-11','2020-07-22','Не законченное'),
(3, 10, 'Работа с заказчиками', 2,'Фёдоров Иосиф Павлович','2020-03-19','2020-06-23','Не законченное'),
(3, 5, 'Заказы', 6,'Маслов Юстин Евсеевич','2020-07-24','2020-07-27','Не законченное'),
(3, 5, 'Заказы', 7,'Ермаков Эрнест Максимович','2020-08-01','2020-08-09','Не законченное'),
(3, 5, 'Заказы', 8,'Ковалёв Гавриил Аркадьевич','2020-08-12','2020-08-29','Не законченное'),
(4, 9, 'Доставка оборудования', 1,'Маслов Юстин Евсеевич','2020-07-24','2020-07-24','Не законченное'),
(4, 10, 'Доставка оборудования', 2,'Ермаков Эрнест Максимович',NULL,'2020-08-01','Не законченное'),
(4, 5, 'Доставка оборудования', 3,'Ковалёв Гавриил Аркадьевич',NULL,'2020-08-12','Не законченное'),
(4, 9, 'Вывоз мусора', 6,'Ковалёв Гавриил Аркадьевич','2020-08-29','2020-08-29','Не законченное'),
(4, 5, 'Вывоз мусора', 5,'Ермаков Эрнест Максимович','2020-08-09','2020-08-09','Не законченное'),
(4, 9, 'Вывоз мусора', 4,'Маслов Юстин Евсеевич','2020-07-27','2020-07-27','Не законченное')
Go
INSERT INTO [Шаги выполнения задания] VALUES
(1,1,'Доставка оборудования'),
(1,2,'Уборка участка'),
(1,3,'Уборка мусора'),
(3,1,'Доставка оборудования'),
(3,2,'Стрижка кроны'),
(3,3,'Уборка мусора'),
(4,1,'Доставка оборудования'),
(4,2,'Приведение клумб в порядок'),
(4,4,'Уборка мусора'),
(5,1,'Доставка Пихт и лопат'),
(5,2,'Выкапывание'),
(5,3,'Высадка'),
(5,4,'Вывоз земли'),
(6,1,'Доставка цветов и лопат'),
(6,2,'Выкапывание'),
(6,3,'Высадка'),
(6,4,'Вывоз земли'),
(8,1,'Доставка оборудования и материалов'),
(8,2,'Расчистка площадки'),
(8,3,'Выкладывание дорожки'),
(8,4,'Уборка пыли и земли'),
(9,1,'Доставка оборудования и материалов'),
(9,2,'Расчистка площадки'),
(9,3,'Оформление зоны декора'),
(9,4,'Косметические правки'),
(10,1,'Доставка оборудования и материалов'),
(10,2,'Расчистка площадки'),
(10,3,'Постройка каркаса'),
(10,4,'Постройка фасада'),
(10,5,'Завершение постройки'),
(10,6,'Вывоз мусора'),
(11,1,'Обсуждение задания'),
(11,2,'Сопровождение заказа'),
(12,1,NULL),
(12,2,NULL),
(13,1,'Обсуждение задания'),
(13,2,'Сопровождение заказа'),
(14,1,'Обсуждение задания'),
(14,2,'Сопровождение заказа'),
(15,1,'Обсуждение задания'),
(15,2,'Сопровождение заказа'),
(16,1,'Работа с бухгалтерией'),
(16,2,'Сопровождение заказа'),
(17,1,'Работа с бухгалтерией'),
(17,2,'Сопровождение заказа'),
(18,1,'Работа с бухгалтерией'),
(18,2,'Сопровождение заказа'),
(19,1,'Забарать оборудование со склада'),
(19,2,'Доставка'),
(20,1,'Забарать оборудование со склада'),
(20,2,'Доставка'),
(21,1,'Забарать оборудование со склада'),
(21,2,'Доставка'),
(22,1,'Забарать и вывезти мусор'),
(23,1,'Забарать и вывезти мусор'),
(24,1,'Забарать и вывезти мусор')
Go

-- Вывести исполнителей заданий, у которых приоритет выше 6
SELECT Исполнитель
FROM [Данные по поступающим заданиям]
WHERE Приоритет > 6

-- Вывести Тип заданий, которые должны быть завершены до 2020-07-04 и со статусом законченное.
SELECT Тип
FROM [Данные по поступающим заданиям]
WHERE [Дата Дедлайна] < '2020-07-04' AND Статус = 'Законченное'

-- Вывести информацию о сотрудниках с фамилией на Л и статусом занят.
SELECT*
FROM [Сотрудники]
WHERE [Занятость] = 'Занят' AND [ФИО сотрудника] = 'Лукин Болеслав Матвеевич'

-- Вывести исполнителей и то, сколько заданий они выполнили в формате ‘Выполнено: (число заданий) шт. заданий’
SELECT Исполнитель, 'Выполнено:' + STR(COUNT('Законченое')) + 'шт. заданий' AS 
Выполнил
FROM [Данные по поступающим заданиям]
GROUP BY Исполнитель

-- Вывести исполнителей и то, сколько заданий они выполнили в формате ‘Выполнено: (число заданий) шт. заданий’
SELECT Исполнитель, 'Выполнено:' + STR(COUNT('Законченое')) + 'шт. заданий' AS 
Выполнил
FROM [Данные по поступающим заданиям]
GROUP BY Исполнитель

-- Вывести информацию о заданиях с плановым сроком сдачи между 2020-07-02 и 
-- 2020-07-19
SELECT*
FROM [Данные по поступающим заданиям]
WHERE [Плановый срок обработки] BETWEEN '2020-07-02' AND '2020-07-19'

-- Вывести информацию о сотрудниках с именем на Г.
SELECT*
FROM [Сотрудники]
WHERE [ФИО сотрудника] LIKE '% Г% %'

-- Вывести ФИО и id тех сотрудников, которые не выполняют ни одного задания из очередей.
SELECT [ФИО сотрудника], [id Cотрудника]
FROM [Сотрудники] LEFT JOIN [Данные по поступающим заданиям]
ON [Сотрудники].[id Cотрудника] = [Данные по поступающим заданиям].Исполнитель
WHERE [Код Очереди] IS NULL

-- Вывести id сотрудников с фамилией на К или выполняющих задание с типом уборка.
SELECT [id Cотрудника]
FROM [Сотрудники]
WHERE [ФИО сотрудника] LIKE 'К%'
UNION
SELECT Исполнитель
FROM [Данные по поступающим заданиям]
WHERE Тип = 'Уборка'

-- Вывести id сотрудников с фамилией на К и выполняющих задание из очереди с кодом 1.
SELECT [id Cотрудника]
FROM [Сотрудники]
WHERE [ФИО сотрудника] LIKE 'К%'
INTERSECT
SELECT [Исполнитель]
FROM [Данные по поступающим заданиям]
WHERE [Код Очереди] = 1

-- Вывести id сотрудников, которые не обновили информацию о себе – закончили свою работу, но изменили своего статуса и все еще заняты.
SELECT [id Cотрудника]
FROM [Сотрудники]
WHERE [Занятость] = 'Занят'
EXCEPT
SELECT [Исполнитель]
FROM [Данные по поступающим заданиям]
WHERE Статус = 'Не законченное'

-- Вывести id и ФИО сотрудников, у которых id от 7 до 9, а так же действия и номера действий, которые им надо выполнить.
SELECT [id Cотрудника], [ФИО сотрудника], [Номер действия], Действие
FROM [Сотрудники], [Данные по поступающим заданиям], [Шаги выполнения задания]
WHERE ([Сотрудники].[id Cотрудника] BETWEEN 7 AND 9) 
AND ([Сотрудники].[id Cотрудника] = [Данные по поступающим заданиям].Исполнитель)
AND ([Шаги выполнения задания].[id Задания] = [Данные по поступающим заданиям].[id Задания])

-- Вывести всю информацию об очереди, у которых тип заданий в очереди – уборка, а так же тип и заказчика заданий в ней, которые соответствуют типу заданий уборка.
SELECT [Очередь заданий].*, Тип, заказчик
FROM [Очередь заданий] JOIN [Данные по поступающим заданиям]
ON ([Очередь заданий].[Код] = [Данные по поступающим заданиям].[Код Очереди]) 
WHERE [Тип заданий] LIKE '%Уборка%'
AND Тип = 'Уборка'

-- Выведите информацию о очереди, типу и заказчикам заданий, которые выполняю сотрудники с именем на К.
SELECT [Очередь заданий].*, Тип, заказчик
FROM ([Данные по поступающим заданиям] JOIN [Очередь заданий]
ON ([Очередь заданий].[Код] = [Данные по поступающим заданиям].[Код Очереди]))
JOIN Сотрудники ON Сотрудники.[id Cотрудника] = [Данные по поступающим заданиям].Исполнитель
WHERE Сотрудники.[ФИО сотрудника] LIKE 'К%'

-- Для задания с приоритетом 4 вывести код очереди, в которой оно находится, ФИО сотрудника, его исполняющего, дату дедлайна и действия, которые надо выполнить.
SELECT DISTINCT [Код Очереди], [ФИО сотрудника], [Дата Дедлайна], Действие
FROM (([Данные по поступающим заданиям] JOIN [Очередь заданий]
ON ([Очередь заданий].[Код] = [Данные по поступающим заданиям].[Код Очереди]))
JOIN Сотрудники ON Сотрудники.[id Cотрудника] = [Данные по поступающим заданиям].Исполнитель)
JOIN [Шаги выполнения задания] ON [Шаги выполнения задания].[id Задания] = [Данные по поступающим заданиям].[id Задания]
WHERE [Данные по поступающим заданиям].Приоритет = 4

-- Вывести информацию обо всех сотрудниках, у которых имя на Л и код очереди, из которой они выполняют задания.
SELECT Сотрудники.*, [Код Очереди]
FROM Сотрудники LEFT JOIN [Данные по поступающим заданиям]
ON [id Cотрудника] = Исполнитель
WHERE [ФИО сотрудника] LIKE 'Л%'

-- Вывести информацию обо всех действиях и заказчика с кодом очереди для заданий с типом посадка крайним сроком выполнения между 2020-07-01 и 2020-07-16.
SELECT  [Код Очереди], Заказчик, [Шаги выполнения задания].*
FROM [Данные по поступающим заданиям] LEFT JOIN [Шаги выполнения задания]
ON [Шаги выполнения задания].[id Задания] = [Данные по поступающим заданиям].[id Задания]
WHERE Тип = 'Посадка'

-- Вывести количество законченных заданий.
SELECT COUNT('Законченное') AS [Количество выполненных заданий]
FROM [Данные по поступающим заданиям]
WHERE Статус = 'Законченное'

-- Вычислить суммарный коэффициент  приоритета (сумма приоритетов) для очереди с кодом 3.
SELECT SUM(Приоритет) AS [Суммарный коэфициент приоритета]
FROM [Данные по поступающим заданиям]
WHERE [Код Очереди] = 3

-- Вывести тремя разными способами день, месяц и год сдачи заданий для очереди с кодом 3.
SELECT Приоритет
FROM [Данные по поступающим заданиям]
WHERE DAY([Дата Дедлайна]) = 15

SELECT Тип
FROM [Данные по поступающим заданиям]
WHERE MONTH([Дата Дедлайна]) = 6

SELECT Статус
FROM [Данные по поступающим заданиям]
WHERE YEAR([Дата Дедлайна]) != 2020

-- Вывести исполнителей и то, сколько заданий они выполнили.
SELECT Исполнитель, COUNT('Законченое') AS Выполнил
FROM [Данные по поступающим заданиям]
GROUP BY Исполнитель

-- Вывести исполнителей и код очереди, а так же количество законченных заданий для каждого исполнителя в очередях с кодом 1 и 2.
SELECT [Код Очереди], Исполнитель, COUNT('Законченое') AS Выполнил
FROM [Данные по поступающим заданиям]
WHERE [Код Очереди] = 1 OR [Код Очереди] = 2
GROUP BY Исполнитель, [Код Очереди]

-- Вывести полную информацию о заданиях из очереди с кодом 1, отсортированные по приоритету.
SELECT*
FROM [Данные по поступающим заданиям]
WHERE [Код Очереди] = 1
ORDER BY Приоритет

-- Добавление нового сотрудника в таблицу.
INSERT INTO Сотрудники VALUES
('Чернов Святослав Вячеславович', DEFAULT)

-- 4.2.	Запрос на добавление новых данных по результатам выполненного запроса; 
-- Создать таблицу с id и ФИО сотрудников, в которой будет указываться номер всех занятых заданиями сотрудников для удобного обращения к ним.
CREATE TABLE [Обратная связь]
([id Cотрудника] int not null Primary key,
[ФИО сотрудника] varchar(30) not null,
Телефон varchar(18) not null check (Телефон like '+7([0-9][0-9][0-9]) [0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]') 
default '+7(800) 555-35-35')
Go
INSERT INTO [Обратная связь] ([id Cотрудника], [ФИО сотрудника])
SELECT [id Cотрудника], [ФИО сотрудника]
FROM Сотрудники
WHERE Занятость = 'Занят'

-- Исправить занятость не успевшего внести данные сотрудника с id 5 с не занят на занят.
UPDATE Сотрудники
SET Занятость = 'Занят'
WHERE [id Cотрудника] = 5
Go

-- В таблице Сотрудники обновить занятость сотрудников, которые не заняты на ‘Занят’.
UPDATE Сотрудники
SET Занятость = 'Занят'
WHERE [id Cотрудника] in (select [id Cотрудника]
						FROM Сотрудники
						WHERE Занятость = 'Не занят')
Go

-- Удаление всех данных из таблицы обратная связь
DELETE 
FROM [Обратная связь]
Go

-- Удалить записи из таблицы Шаги выполнения задания, которые соответствуют кодам очереди между 1 и 3.
DELETE [Шаги выполнения задания]
FROM [Данные по поступающим заданиям] JOIN [Шаги выполнения задания]
ON [Данные по поступающим заданиям].[id Задания] = [Шаги выполнения задания].[id Задания]
WHERE [Код Очереди] BETWEEN 1 AND 3
	 Go

-- Удалить записи из таблицы Шаги выполнения задания, которые соответствуют типу заданий Уборка 
DELETE [Шаги выполнения задания]
FROM [Шаги выполнения задания]
	WHERE [id Задания] in (select [id Задания]
					FROM [Данные по поступающим заданиям]
					WHERE Тип = 'Уборка')
Go

-- Удалить из  таблицы Шаги выполнения задания записи относящиеся к заданиям с приоритетом от 2 до 6и.
DELETE [Шаги выполнения задания]
FROM [Шаги выполнения задания] JOIN [Данные по поступающим заданиям] 
ON [Данные по поступающим заданиям].[id Задания] = [Шаги выполнения задания].[id адания]
WHERE Приоритет BETWEEN 2 AND 6
Go

-- Вывести информацию о сотруднике Алексее Ермолаеве Анатольевиче.
SELECT*
FROM Сотрудники
WHERE [id Cотрудника] = (SELECT [id Cотрудника]
				From Сотрудники
			WHERE [ФИО сотрудника] = 'Алексеев Ермолай Анатольевич')

-- Вывести информацию о очередях, в которой есть задания, плановый срок сдачи которых больше 2020-07-18.
SELECT*
FROM [Очередь заданий]
WHERE Код > (SELECT [Код Очереди]
		From [Данные по поступающим заданиям]
	WHERE [Плановый срок обработки] = '2020-07-18')

-- Вывести информацию о сотруднике, который занимается заказами, дата дедлайна которых рана  2020-08-01.
SELECT*
FROM Сотрудники
WHERE [id Cотрудника] = (SELECT Исполнитель
				From [Данные по поступающим заданиям]
			WHERE [Дата Дедлайна] = '2020-08-01')

-- Вывести информацию о тех сотрудниках, которые занимаются заданиями с приоритетом не более 4.
SELECT*
FROM Сотрудники
WHERE [id Cотрудника] = ANY (SELECT Исполнитель
					From [Данные по поступающим заданиям]
				WHERE Приоритет <= 4)

-- Вывести информацию о заданиях, у которых все даты дедлайна позже, чем у заданий с типом Уборка.
SELECT*
FROM [Данные по поступающим заданиям]
WHERE [Дата Дедлайна] > ALL (SELECT [Дата Дедлайна]
					From [Данные по поступающим заданиям]
				WHERE Тип = 'Уборка')

-- Вывести информацию о очереди в которой содержатся задания с типом Работа с заказчиками.
SELECT*
FROM [Очередь заданий]
WHERE Код IN (SELECT [Код Очереди]
			From [Данные по поступающим заданиям]
		WHERE Тип LIKE 'Работа с заказчиками')

-- Вывести информацию о очереди, которая содержит данные о заданиях с типом Уборка.
SELECT*
FROM [Очередь заданий]
WHERE EXISTS (SELECT*
		From [Данные по поступающим заданиям]
WHERE [Данные по поступающим заданиям].[Код Очереди] = [Очередь заданий].Код AND Тип = 'Уборка')

-- Вывести информацию о очереди, которая содержит данные о заданиях, над которыми работают работник(и), который(е) не успели изменить о себе данные (работают над незавершенным заданием, но не заняты).
SELECT*
FROM [Очередь заданий]
WHERE EXISTS (SELECT*
		From [Данные по поступающим заданиям]
WHERE [Данные по поступающим заданиям].[Код Очереди] = [Очередь заданий].Код
		AND EXISTS (SELECT*
				FROM Сотрудники
WHERE [Данные по поступающим заданиям].Исполнитель = [id Cотрудника] AND Занятость = 'Не занят'))

-- Вывести информацию о очереди заданий, над заданиями из которой работает сотрудник из верхушки списка сотрудников.
SELECT*
FROM [Очередь заданий]
WHERE EXISTS (SELECT*
		From [Данные по поступающим заданиям]
WHERE [Данные по поступающим заданиям].[Код Очереди] = [Очередь заданий].Код AND EXISTS (SELECT*
						FROM Сотрудники
WHERE [Данные по поступающим заданиям].Исполнитель = [id Cотрудника] 
AND [id Cотрудника] = (SELECT TOP 1 [id Cотрудника] 
						FROM Сотрудники)))

-- Добавить столбец с телефонными номерами сотрудников в Сотрудники.
ALTER TABLE Сотрудники
ADD Телефон varchar(18)
Go

-- Добавить проверку к формату ввода телефонного номера (из прошлого запроса) для таблицы Сотрудники.
ALTER TABLE Сотрудники
ADD constraint Телефон check (Телефон
like '+7([0-9][0-9][0-9]) [0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]')
Go

-- Удалить созданное к таблице Сотрудники ограничение на формат ввода телефонного номера.
ALTER TABLE Сотрудники
DROP constraint Телефон
Go

-- Удалить столбец Телефон в таблице Сотрудники.
ALTER TABLE Сотрудники
DROP column Телефон
Go

-- Изменить тип данных в таблице Данные по поступающим заданиям у столбца Тип с varchar(30) на varchar(45).
ALTER TABLE [Данные по поступающим заданиям]
ALTER column Тип varchar(45)

-- Изменение первичного ключа в таблице Сотрудники с сохранением целостности таблицы.
ALTER TABLE [Данные по поступающим заданиям]
	DROP constraint ВК_Исполнитель
Go
ALTER TABLE Сотрудники
	DROP constraint ПК_id_Сотрудника
Go
DELETE 
FROM Сотрудники
Go
ALTER TABLE Сотрудники
	ADD Телефон varchar(18) not null
Go
ALTER TABLE Сотрудники
	ADD constraint Телефон check (Телефон
	like '+7([0-9][0-9][0-9]) [0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]')
Go
DBCC CHECKIDENT('Сотрудники', RESEED, 0) --сброс счетчика
Go
INSERT INTO Сотрудники VALUES
('Веселов Геннадий Николаевич', 'Занят','+7(463) 626-23-19'),
('Евсеев Вилен Вячеславович','Занят','+7(400) 519-12-28'),
('Игнатов Гарри Оскарович','Не занят','+7(460) 332-53-09'),
('Алексеев Ермолай Анатольевич','Занят','+7(729) 022-28-53'),
('Новиков Прохор Улебович','Не занят','+7(923) 890-26-80'),
('Лаврентьев Альфред Вадимович','Не занят','+7(041) 404-72-75'),
('Карпов Витольд Егорович','Занят','+7(537) 859-88-57'),
('Лукин Болеслав Матвеевич','Занят','+7(418) 558-20-63'),
('Родионов Андрей Геласьевич','Занят','+7(357) 170-02-78'),
('Крылов Даниил Денисович','Занят','+7(470) 556-47-87')
Go
ALTER TABLE Сотрудники
	ADD constraint ПК_Телефон primary key (Телефон)
Go
ALTER TABLE [Данные по поступающим заданиям] ADD Телефон varchar(18) NOT NULL DEFAULT '+7(463) 626-23-19'
ALTER TABLE [Данные по поступающим заданиям] ADD FOREIGN KEY (Телефон) REFERENCES Сотрудники (Телефон)
ON UPDATE CASCADE
ON DELETE CASCADE
Go